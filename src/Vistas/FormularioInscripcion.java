
package Vistas;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadgrupo8.accesoADatos.AlumnoData;
import universidadgrupo8.accesoADatos.InscripcionData;
import universidadgrupo8.accesoADatos.MateriaData;
import universidadgrupo8.entidad.Alumno;
import universidadgrupo8.entidad.Inscripcion;
import universidadgrupo8.entidad.Materia;


public class FormularioInscripcion extends javax.swing.JInternalFrame {

    private List<Materia>listaM;
    private List<Alumno> listaA;
    private InscripcionData insData;
    private MateriaData mData;
    private AlumnoData aData;
    private DefaultTableModel modelo;
    /**
     * Creates new form FormularioInscripcion
     */
    public FormularioInscripcion() {
        initComponents();
        aData = new AlumnoData();
    listaA = aData.listarAlumnos();
    modelo = new DefaultTableModel();
    insData = new InscripcionData();
    mData = new MateriaData();
    cargarAlumnos();
    armarCabeceraTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jcAlumnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jrMateriasInscriptas = new javax.swing.JRadioButton();
        jrMateriasNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();
        jbInscribir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Formulario de Inscripción");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Seleccione un alumno:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Listado de Materias");

        jrMateriasInscriptas.setText("Materias inscriptas");
        jrMateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMateriasInscriptasActionPerformed(evt);
            }
        });

        jrMateriasNoInscriptas.setText("Materias no inscriptas");
        jrMateriasNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMateriasNoInscriptasActionPerformed(evt);
            }
        });

        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTabla);

        jbInscribir.setText("Inscribir");
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnular.setText("Anular Inscripción");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(30, 30, 30)
                                        .addComponent(jcAlumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jrMateriasInscriptas)
                                .addGap(45, 45, 45)
                                .addComponent(jrMateriasNoInscriptas)))
                        .addGap(0, 46, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jbInscribir)
                .addGap(37, 37, 37)
                .addComponent(jbAnular)
                .addGap(40, 40, 40)
                .addComponent(jbSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrMateriasInscriptas)
                    .addComponent(jrMateriasNoInscriptas))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir)
                    .addComponent(jbAnular)
                    .addComponent(jbSalir))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrMateriasInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMateriasInscriptasActionPerformed
        borrarFilas();
        cargaInscriptas();
        jbAnular.setEnabled(true);
        jbInscribir.setEnabled(false);
        
        if(jrMateriasInscriptas.isSelected()){
            jrMateriasNoInscriptas.setSelected(false);
        }
    }//GEN-LAST:event_jrMateriasInscriptasActionPerformed

    private void jrMateriasNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMateriasNoInscriptasActionPerformed
        borrarFilas();
        cargarNoIncriptas();
        jbInscribir.setEnabled(true);
        jbAnular.setEnabled(false);
        
        if(jrMateriasNoInscriptas.isSelected()){
            jrMateriasInscriptas.setSelected(false);
        }
    }//GEN-LAST:event_jrMateriasNoInscriptasActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        int filaSeleccionada = jTabla.getSelectedRow();
        if(filaSeleccionada != -1){
            Alumno a = (Alumno)jcAlumnos.getSelectedItem();
            int idMateria = (Integer)modelo.getValueAt(filaSeleccionada, 0);
            String nombreMateria = (String)modelo.getValueAt            (filaSeleccionada,1);
            int anio = (Integer)modelo.getValueAt(filaSeleccionada,2);
            Materia m = new Materia(idMateria,nombreMateria,anio,true);
            Inscripcion i = new Inscripcion(a,m,0);
            insData.guardarInscripcion(i);
            borrarFilas();
            jrMateriasNoInscriptas.setSelected(false);
            jrMateriasInscriptas.setSelected(false);
        }else{
            JOptionPane.showMessageDialog(null,"Usted debe seleccionar una fila de la tabla");
        }
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        int filaSeleccionada = jTabla.getSelectedRow();
        if(filaSeleccionada != -1){
            Alumno a = (Alumno)jcAlumnos.getSelectedItem();
            int idMateria = (Integer)modelo.getValueAt(filaSeleccionada, 0);
            insData.borrarIncripcionMateriaaAlumno(a.getIdAlumno(), idMateria);
            borrarFilas();
            jrMateriasNoInscriptas.setSelected(false);
            jrMateriasInscriptas.setSelected(false);
        }else{
            JOptionPane.showMessageDialog(null,"Usted debe seleccionar una fila de la tabla");
        }
    }//GEN-LAST:event_jbAnularActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTabla;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumno> jcAlumnos;
    private javax.swing.JRadioButton jrMateriasInscriptas;
    private javax.swing.JRadioButton jrMateriasNoInscriptas;
    // End of variables declaration//GEN-END:variables

    private void cargarAlumnos() {
        for(Alumno a : listaA){
            jcAlumnos.addItem(a);
        }
    }

    private void armarCabeceraTabla() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("ID");
        filaCabecera.add("Nombre");
        filaCabecera.add("Año");
        for(Object o : filaCabecera){
            modelo.addColumn(o);
        }
        jTabla.setModel(modelo);
    }
    
        private void borrarFilas(){
        int i = modelo.getRowCount() -1;
        for(int x = i ; x>=0 ; x--){
            modelo.removeRow(x);
        }
    }
    
    private void cargarNoIncriptas(){
        Alumno selec = (Alumno)jcAlumnos.getSelectedItem();
        listaM = insData.obtenerMateriasNOCursadas(selec.getIdAlumno());
        for(Materia m : listaM){
            modelo.addRow(new Object[] {(m.getIdMateria()) , (m.getNombre()) , (m.getAño())});
        }
    }
    
    private void cargaInscriptas(){
         Alumno selec = (Alumno)jcAlumnos.getSelectedItem();
         List<Materia> lista = insData.obtenerMateriasCursadas(selec.getIdAlumno());
         for(Materia m : lista){
             modelo.addRow(new Object[]{(m.getIdMateria()),(m.getNombre()),(m.getAño())});
         }
    }
}
